import networkx as nx  #biblioteca de algoritmo 
import matplotlib.pyplot as plt # Parte grafica

def dijkstra(graph, start):
    
    nodes = list(graph.nodes())  # Se implementa el algoritmo
conda install matplotlib
    n = len(nodes)
    dist = {node: float('inf') for node in nodes}
    dist[start] = 0
    visited = {node: False for node in nodes}

    for _ in range(n):
        min_dist = float('inf')
        min_node = None
        for node in nodes:
            if not visited[node] and dist[node] < min_dist:
                min_dist = dist[node]
                min_node = node

        visited[min_node] = True
        for neighbor, weight in graph[min_node].items():
            if dist[min_node] + weight['weight'] < dist[neighbor]:
                dist[neighbor] = dist[min_node] + weight['weight']

    return dist


G = nx.Graph()  #Se declara el grafo e implementa
nodes = ['Estacion 1', 'Estacion 2', 'Estacion 3', 'Estacion 4', 'Estacion 5', 'Estacion 6', 'Estacion 7']
edges = [
    ('Estacion 1', 'Estacion 2', 2),
    ('Estacion 1', 'Estacion 3', 5),
    ('Estacion 2', 'Estacion 3', 2),
    ('Estacion 2', 'Estacion 4', 1),
    ('Estacion 3', 'Estacion 5', 4),
    ('Estacion 4', 'Estacion 5', 3),
    ('Estacion 4', 'Estacion 6', 6),
    ('Estacion 5', 'Estacion 7', 7),
    ('Estacion 6', 'Estacion 7', 2)
]

G.add_nodes_from(nodes)
for edge in edges:
    G.add_edge(edge[0], edge[1], weight=edge[2])

start_node = 'Estacion 1' # Aplicar el algoritmo de Dijkstra desde 'Estacion 1'
distances = dijkstra(G, start_node)
print("Distancias m치s cortas desde", start_node + ":")
for node, dist in distances.items():
    print(node, "-->", dist)

# Visualizaci칩n gr치fica del grafo
pos = nx.spring_layout(G)  # Posiciones para graficar
nx.draw(G, pos, with_labels=True, node_color='skyblue', node_size=1500, font_size=10, font_color='black')
edge_labels = {(u, v): d['weight'] for u, v, d in G.edges(data=True)}
nx.draw_networkx_edge_labels(G, pos, edge_labels=edge_labels, label_pos=0.3, font_size=10)
plt.title('Grafo de Estaciones de Cami칩n')
plt.show()
